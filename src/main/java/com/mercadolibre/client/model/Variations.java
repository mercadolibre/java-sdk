/*
 * MercadoLibre API
 * MercadoLibre API Documentation.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mercadolibre.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Variations
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-06T14:21:46.668-03:00")
public class Variations {
  @JsonProperty("attribute_combinations")
  private List<AttributeCombinations> attributeCombinations = null;

  @JsonProperty("price")
  private Integer price = null;

  @JsonProperty("available_quantity")
  private Integer availableQuantity = null;

  @JsonProperty("attributes")
  private List<Attributes> attributes = null;

  @JsonProperty("sold_quantity")
  private Integer soldQuantity = null;

  @JsonProperty("picture_ids")
  private List<String> pictureIds = null;

  public Variations attributeCombinations(List<AttributeCombinations> attributeCombinations) {
    this.attributeCombinations = attributeCombinations;
    return this;
  }

  public Variations addAttributeCombinationsItem(AttributeCombinations attributeCombinationsItem) {
    if (this.attributeCombinations == null) {
      this.attributeCombinations = new ArrayList<AttributeCombinations>();
    }
    this.attributeCombinations.add(attributeCombinationsItem);
    return this;
  }

   /**
   * Get attributeCombinations
   * @return attributeCombinations
  **/
  @ApiModelProperty(value = "")
  public List<AttributeCombinations> getAttributeCombinations() {
    return attributeCombinations;
  }

  public void setAttributeCombinations(List<AttributeCombinations> attributeCombinations) {
    this.attributeCombinations = attributeCombinations;
  }

  public Variations price(Integer price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }

  public Variations availableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
    return this;
  }

   /**
   * Get availableQuantity
   * @return availableQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailableQuantity() {
    return availableQuantity;
  }

  public void setAvailableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
  }

  public Variations attributes(List<Attributes> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Variations addAttributesItem(Attributes attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<Attributes>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<Attributes> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<Attributes> attributes) {
    this.attributes = attributes;
  }

  public Variations soldQuantity(Integer soldQuantity) {
    this.soldQuantity = soldQuantity;
    return this;
  }

   /**
   * Get soldQuantity
   * @return soldQuantity
  **/
  @ApiModelProperty(value = "")
  public Integer getSoldQuantity() {
    return soldQuantity;
  }

  public void setSoldQuantity(Integer soldQuantity) {
    this.soldQuantity = soldQuantity;
  }

  public Variations pictureIds(List<String> pictureIds) {
    this.pictureIds = pictureIds;
    return this;
  }

  public Variations addPictureIdsItem(String pictureIdsItem) {
    if (this.pictureIds == null) {
      this.pictureIds = new ArrayList<String>();
    }
    this.pictureIds.add(pictureIdsItem);
    return this;
  }

   /**
   * Get pictureIds
   * @return pictureIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getPictureIds() {
    return pictureIds;
  }

  public void setPictureIds(List<String> pictureIds) {
    this.pictureIds = pictureIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Variations variations = (Variations) o;
    return Objects.equals(this.attributeCombinations, variations.attributeCombinations) &&
        Objects.equals(this.price, variations.price) &&
        Objects.equals(this.availableQuantity, variations.availableQuantity) &&
        Objects.equals(this.attributes, variations.attributes) &&
        Objects.equals(this.soldQuantity, variations.soldQuantity) &&
        Objects.equals(this.pictureIds, variations.pictureIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeCombinations, price, availableQuantity, attributes, soldQuantity, pictureIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Variations {\n");
    
    sb.append("    attributeCombinations: ").append(toIndentedString(attributeCombinations)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    availableQuantity: ").append(toIndentedString(availableQuantity)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    soldQuantity: ").append(toIndentedString(soldQuantity)).append("\n");
    sb.append("    pictureIds: ").append(toIndentedString(pictureIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

