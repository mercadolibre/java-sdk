/*
 * MercadoLibre API
 * MercadoLibre API Documentation.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mercadolibre.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CategoryResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-06T14:21:46.668-03:00")
public class CategoryResponse {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("picture")
  private Object picture = null;

  @JsonProperty("permalink")
  private Object permalink = null;

  @JsonProperty("total_items_in_this_category")
  private Integer totalItemsInThisCategory = null;

  @JsonProperty("path_from_root")
  private List<PathFromRoot> pathFromRoot = null;

  @JsonProperty("children_categories")
  private List<String> childrenCategories = null;

  @JsonProperty("attribute_types")
  private String attributeTypes = null;

  @JsonProperty("settings")
  private CategorySettings settings = null;

  @JsonProperty("meta_categ_id")
  private Integer metaCategId = null;

  @JsonProperty("attributable")
  private Boolean attributable = null;

  public CategoryResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CategoryResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CategoryResponse picture(Object picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @ApiModelProperty(value = "")
  public Object getPicture() {
    return picture;
  }

  public void setPicture(Object picture) {
    this.picture = picture;
  }

  public CategoryResponse permalink(Object permalink) {
    this.permalink = permalink;
    return this;
  }

   /**
   * Get permalink
   * @return permalink
  **/
  @ApiModelProperty(value = "")
  public Object getPermalink() {
    return permalink;
  }

  public void setPermalink(Object permalink) {
    this.permalink = permalink;
  }

  public CategoryResponse totalItemsInThisCategory(Integer totalItemsInThisCategory) {
    this.totalItemsInThisCategory = totalItemsInThisCategory;
    return this;
  }

   /**
   * Get totalItemsInThisCategory
   * @return totalItemsInThisCategory
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalItemsInThisCategory() {
    return totalItemsInThisCategory;
  }

  public void setTotalItemsInThisCategory(Integer totalItemsInThisCategory) {
    this.totalItemsInThisCategory = totalItemsInThisCategory;
  }

  public CategoryResponse pathFromRoot(List<PathFromRoot> pathFromRoot) {
    this.pathFromRoot = pathFromRoot;
    return this;
  }

  public CategoryResponse addPathFromRootItem(PathFromRoot pathFromRootItem) {
    if (this.pathFromRoot == null) {
      this.pathFromRoot = new ArrayList<PathFromRoot>();
    }
    this.pathFromRoot.add(pathFromRootItem);
    return this;
  }

   /**
   * Get pathFromRoot
   * @return pathFromRoot
  **/
  @ApiModelProperty(value = "")
  public List<PathFromRoot> getPathFromRoot() {
    return pathFromRoot;
  }

  public void setPathFromRoot(List<PathFromRoot> pathFromRoot) {
    this.pathFromRoot = pathFromRoot;
  }

  public CategoryResponse childrenCategories(List<String> childrenCategories) {
    this.childrenCategories = childrenCategories;
    return this;
  }

  public CategoryResponse addChildrenCategoriesItem(String childrenCategoriesItem) {
    if (this.childrenCategories == null) {
      this.childrenCategories = new ArrayList<String>();
    }
    this.childrenCategories.add(childrenCategoriesItem);
    return this;
  }

   /**
   * Get childrenCategories
   * @return childrenCategories
  **/
  @ApiModelProperty(value = "")
  public List<String> getChildrenCategories() {
    return childrenCategories;
  }

  public void setChildrenCategories(List<String> childrenCategories) {
    this.childrenCategories = childrenCategories;
  }

  public CategoryResponse attributeTypes(String attributeTypes) {
    this.attributeTypes = attributeTypes;
    return this;
  }

   /**
   * Get attributeTypes
   * @return attributeTypes
  **/
  @ApiModelProperty(value = "")
  public String getAttributeTypes() {
    return attributeTypes;
  }

  public void setAttributeTypes(String attributeTypes) {
    this.attributeTypes = attributeTypes;
  }

  public CategoryResponse settings(CategorySettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(value = "")
  public CategorySettings getSettings() {
    return settings;
  }

  public void setSettings(CategorySettings settings) {
    this.settings = settings;
  }

  public CategoryResponse metaCategId(Integer metaCategId) {
    this.metaCategId = metaCategId;
    return this;
  }

   /**
   * Get metaCategId
   * @return metaCategId
  **/
  @ApiModelProperty(value = "")
  public Integer getMetaCategId() {
    return metaCategId;
  }

  public void setMetaCategId(Integer metaCategId) {
    this.metaCategId = metaCategId;
  }

  public CategoryResponse attributable(Boolean attributable) {
    this.attributable = attributable;
    return this;
  }

   /**
   * Get attributable
   * @return attributable
  **/
  @ApiModelProperty(value = "")
  public Boolean isAttributable() {
    return attributable;
  }

  public void setAttributable(Boolean attributable) {
    this.attributable = attributable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoryResponse categoryResponse = (CategoryResponse) o;
    return Objects.equals(this.id, categoryResponse.id) &&
        Objects.equals(this.name, categoryResponse.name) &&
        Objects.equals(this.picture, categoryResponse.picture) &&
        Objects.equals(this.permalink, categoryResponse.permalink) &&
        Objects.equals(this.totalItemsInThisCategory, categoryResponse.totalItemsInThisCategory) &&
        Objects.equals(this.pathFromRoot, categoryResponse.pathFromRoot) &&
        Objects.equals(this.childrenCategories, categoryResponse.childrenCategories) &&
        Objects.equals(this.attributeTypes, categoryResponse.attributeTypes) &&
        Objects.equals(this.settings, categoryResponse.settings) &&
        Objects.equals(this.metaCategId, categoryResponse.metaCategId) &&
        Objects.equals(this.attributable, categoryResponse.attributable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, picture, permalink, totalItemsInThisCategory, pathFromRoot, childrenCategories, attributeTypes, settings, metaCategId, attributable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoryResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    permalink: ").append(toIndentedString(permalink)).append("\n");
    sb.append("    totalItemsInThisCategory: ").append(toIndentedString(totalItemsInThisCategory)).append("\n");
    sb.append("    pathFromRoot: ").append(toIndentedString(pathFromRoot)).append("\n");
    sb.append("    childrenCategories: ").append(toIndentedString(childrenCategories)).append("\n");
    sb.append("    attributeTypes: ").append(toIndentedString(attributeTypes)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    metaCategId: ").append(toIndentedString(metaCategId)).append("\n");
    sb.append("    attributable: ").append(toIndentedString(attributable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

