/*
 * MercadoLibre API
 * MercadoLibre API Documentation.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mercadolibre.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Site
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-06T14:21:46.668-03:00")
public class Site {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("country_id")
  private String countryId = null;

  @JsonProperty("sale_fees_mode")
  private String saleFeesMode = null;

  @JsonProperty("mercadopago_version")
  private Integer mercadopagoVersion = null;

  @JsonProperty("default_currency_id")
  private String defaultCurrencyId = null;

  @JsonProperty("immediate_payment")
  private String immediatePayment = null;

  @JsonProperty("payment_method_ids")
  private List<String> paymentMethodIds = null;

  @JsonProperty("settings")
  private SiteSettings settings = null;

  @JsonProperty("currencies")
  private List<Currencies> currencies = null;

  @JsonProperty("categories")
  private List<Categories> categories = null;

  public Site id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Site name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Site countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

   /**
   * Get countryId
   * @return countryId
  **/
  @ApiModelProperty(value = "")
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }

  public Site saleFeesMode(String saleFeesMode) {
    this.saleFeesMode = saleFeesMode;
    return this;
  }

   /**
   * Get saleFeesMode
   * @return saleFeesMode
  **/
  @ApiModelProperty(value = "")
  public String getSaleFeesMode() {
    return saleFeesMode;
  }

  public void setSaleFeesMode(String saleFeesMode) {
    this.saleFeesMode = saleFeesMode;
  }

  public Site mercadopagoVersion(Integer mercadopagoVersion) {
    this.mercadopagoVersion = mercadopagoVersion;
    return this;
  }

   /**
   * Get mercadopagoVersion
   * @return mercadopagoVersion
  **/
  @ApiModelProperty(value = "")
  public Integer getMercadopagoVersion() {
    return mercadopagoVersion;
  }

  public void setMercadopagoVersion(Integer mercadopagoVersion) {
    this.mercadopagoVersion = mercadopagoVersion;
  }

  public Site defaultCurrencyId(String defaultCurrencyId) {
    this.defaultCurrencyId = defaultCurrencyId;
    return this;
  }

   /**
   * Get defaultCurrencyId
   * @return defaultCurrencyId
  **/
  @ApiModelProperty(value = "")
  public String getDefaultCurrencyId() {
    return defaultCurrencyId;
  }

  public void setDefaultCurrencyId(String defaultCurrencyId) {
    this.defaultCurrencyId = defaultCurrencyId;
  }

  public Site immediatePayment(String immediatePayment) {
    this.immediatePayment = immediatePayment;
    return this;
  }

   /**
   * Get immediatePayment
   * @return immediatePayment
  **/
  @ApiModelProperty(value = "")
  public String getImmediatePayment() {
    return immediatePayment;
  }

  public void setImmediatePayment(String immediatePayment) {
    this.immediatePayment = immediatePayment;
  }

  public Site paymentMethodIds(List<String> paymentMethodIds) {
    this.paymentMethodIds = paymentMethodIds;
    return this;
  }

  public Site addPaymentMethodIdsItem(String paymentMethodIdsItem) {
    if (this.paymentMethodIds == null) {
      this.paymentMethodIds = new ArrayList<String>();
    }
    this.paymentMethodIds.add(paymentMethodIdsItem);
    return this;
  }

   /**
   * Get paymentMethodIds
   * @return paymentMethodIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getPaymentMethodIds() {
    return paymentMethodIds;
  }

  public void setPaymentMethodIds(List<String> paymentMethodIds) {
    this.paymentMethodIds = paymentMethodIds;
  }

  public Site settings(SiteSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(value = "")
  public SiteSettings getSettings() {
    return settings;
  }

  public void setSettings(SiteSettings settings) {
    this.settings = settings;
  }

  public Site currencies(List<Currencies> currencies) {
    this.currencies = currencies;
    return this;
  }

  public Site addCurrenciesItem(Currencies currenciesItem) {
    if (this.currencies == null) {
      this.currencies = new ArrayList<Currencies>();
    }
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * Get currencies
   * @return currencies
  **/
  @ApiModelProperty(value = "")
  public List<Currencies> getCurrencies() {
    return currencies;
  }

  public void setCurrencies(List<Currencies> currencies) {
    this.currencies = currencies;
  }

  public Site categories(List<Categories> categories) {
    this.categories = categories;
    return this;
  }

  public Site addCategoriesItem(Categories categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<Categories>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @ApiModelProperty(value = "")
  public List<Categories> getCategories() {
    return categories;
  }

  public void setCategories(List<Categories> categories) {
    this.categories = categories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Site site = (Site) o;
    return Objects.equals(this.id, site.id) &&
        Objects.equals(this.name, site.name) &&
        Objects.equals(this.countryId, site.countryId) &&
        Objects.equals(this.saleFeesMode, site.saleFeesMode) &&
        Objects.equals(this.mercadopagoVersion, site.mercadopagoVersion) &&
        Objects.equals(this.defaultCurrencyId, site.defaultCurrencyId) &&
        Objects.equals(this.immediatePayment, site.immediatePayment) &&
        Objects.equals(this.paymentMethodIds, site.paymentMethodIds) &&
        Objects.equals(this.settings, site.settings) &&
        Objects.equals(this.currencies, site.currencies) &&
        Objects.equals(this.categories, site.categories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, countryId, saleFeesMode, mercadopagoVersion, defaultCurrencyId, immediatePayment, paymentMethodIds, settings, currencies, categories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Site {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    saleFeesMode: ").append(toIndentedString(saleFeesMode)).append("\n");
    sb.append("    mercadopagoVersion: ").append(toIndentedString(mercadopagoVersion)).append("\n");
    sb.append("    defaultCurrencyId: ").append(toIndentedString(defaultCurrencyId)).append("\n");
    sb.append("    immediatePayment: ").append(toIndentedString(immediatePayment)).append("\n");
    sb.append("    paymentMethodIds: ").append(toIndentedString(paymentMethodIds)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

