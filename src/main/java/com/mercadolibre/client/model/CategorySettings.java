/*
 * MercadoLibre API
 * MercadoLibre API Documentation.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mercadolibre.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CategorySettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-06T14:21:46.668-03:00")
public class CategorySettings {
  @JsonProperty("adult_content")
  private Boolean adultContent = null;

  @JsonProperty("buying_allowed")
  private Boolean buyingAllowed = null;

  @JsonProperty("buying_modes")
  private List<String> buyingModes = null;

  @JsonProperty("catalog_domain")
  private String catalogDomain = null;

  @JsonProperty("coverage_areas")
  private String coverageAreas = null;

  @JsonProperty("currencies")
  private List<String> currencies = null;

  @JsonProperty("fragile")
  private Boolean fragile = null;

  @JsonProperty("immediate_payment")
  private String immediatePayment = null;

  @JsonProperty("item_conditions")
  private List<String> itemConditions = null;

  @JsonProperty("items_reviews_allowed")
  private Boolean itemsReviewsAllowed = null;

  @JsonProperty("listing_allowed")
  private Boolean listingAllowed = null;

  @JsonProperty("max_description_length")
  private Integer maxDescriptionLength = null;

  @JsonProperty("max_pictures_per_item")
  private Integer maxPicturesPerItem = null;

  @JsonProperty("max_pictures_per_item_var")
  private Integer maxPicturesPerItemVar = null;

  @JsonProperty("max_sub_title_length")
  private Integer maxSubTitleLength = null;

  @JsonProperty("max_title_length")
  private Integer maxTitleLength = null;

  @JsonProperty("maximum_price")
  private Object maximumPrice = null;

  @JsonProperty("minimum_price")
  private Object minimumPrice = null;

  @JsonProperty("mirror_category")
  private String mirrorCategory = null;

  @JsonProperty("mirror_master_category")
  private Object mirrorMasterCategory = null;

  @JsonProperty("mirror_slave_categories")
  private List<String> mirrorSlaveCategories = null;

  @JsonProperty("price")
  private String price = null;

  @JsonProperty("reservation_allowed")
  private String reservationAllowed = null;

  @JsonProperty("restrictions")
  private List<String> restrictions = null;

  @JsonProperty("rounded_address")
  private Boolean roundedAddress = null;

  @JsonProperty("seller_contact")
  private String sellerContact = null;

  @JsonProperty("shipping_modes")
  private List<String> shippingModes = null;

  @JsonProperty("shipping_options")
  private List<String> shippingOptions = null;

  @JsonProperty("shipping_profile")
  private String shippingProfile = null;

  @JsonProperty("show_contact_information")
  private Boolean showContactInformation = null;

  @JsonProperty("simple_shipping")
  private String simpleShipping = null;

  @JsonProperty("stock")
  private String stock = null;

  @JsonProperty("sub_vertical")
  private Object subVertical = null;

  @JsonProperty("subscribable")
  private Boolean subscribable = null;

  @JsonProperty("tags")
  private List<String> tags = null;

  @JsonProperty("vertical")
  private Object vertical = null;

  @JsonProperty("vip_subdomain")
  private String vipSubdomain = null;

  public CategorySettings adultContent(Boolean adultContent) {
    this.adultContent = adultContent;
    return this;
  }

   /**
   * Get adultContent
   * @return adultContent
  **/
  @ApiModelProperty(value = "")
  public Boolean isAdultContent() {
    return adultContent;
  }

  public void setAdultContent(Boolean adultContent) {
    this.adultContent = adultContent;
  }

  public CategorySettings buyingAllowed(Boolean buyingAllowed) {
    this.buyingAllowed = buyingAllowed;
    return this;
  }

   /**
   * Get buyingAllowed
   * @return buyingAllowed
  **/
  @ApiModelProperty(value = "")
  public Boolean isBuyingAllowed() {
    return buyingAllowed;
  }

  public void setBuyingAllowed(Boolean buyingAllowed) {
    this.buyingAllowed = buyingAllowed;
  }

  public CategorySettings buyingModes(List<String> buyingModes) {
    this.buyingModes = buyingModes;
    return this;
  }

  public CategorySettings addBuyingModesItem(String buyingModesItem) {
    if (this.buyingModes == null) {
      this.buyingModes = new ArrayList<String>();
    }
    this.buyingModes.add(buyingModesItem);
    return this;
  }

   /**
   * Get buyingModes
   * @return buyingModes
  **/
  @ApiModelProperty(value = "")
  public List<String> getBuyingModes() {
    return buyingModes;
  }

  public void setBuyingModes(List<String> buyingModes) {
    this.buyingModes = buyingModes;
  }

  public CategorySettings catalogDomain(String catalogDomain) {
    this.catalogDomain = catalogDomain;
    return this;
  }

   /**
   * Get catalogDomain
   * @return catalogDomain
  **/
  @ApiModelProperty(value = "")
  public String getCatalogDomain() {
    return catalogDomain;
  }

  public void setCatalogDomain(String catalogDomain) {
    this.catalogDomain = catalogDomain;
  }

  public CategorySettings coverageAreas(String coverageAreas) {
    this.coverageAreas = coverageAreas;
    return this;
  }

   /**
   * Get coverageAreas
   * @return coverageAreas
  **/
  @ApiModelProperty(value = "")
  public String getCoverageAreas() {
    return coverageAreas;
  }

  public void setCoverageAreas(String coverageAreas) {
    this.coverageAreas = coverageAreas;
  }

  public CategorySettings currencies(List<String> currencies) {
    this.currencies = currencies;
    return this;
  }

  public CategorySettings addCurrenciesItem(String currenciesItem) {
    if (this.currencies == null) {
      this.currencies = new ArrayList<String>();
    }
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * Get currencies
   * @return currencies
  **/
  @ApiModelProperty(value = "")
  public List<String> getCurrencies() {
    return currencies;
  }

  public void setCurrencies(List<String> currencies) {
    this.currencies = currencies;
  }

  public CategorySettings fragile(Boolean fragile) {
    this.fragile = fragile;
    return this;
  }

   /**
   * Get fragile
   * @return fragile
  **/
  @ApiModelProperty(value = "")
  public Boolean isFragile() {
    return fragile;
  }

  public void setFragile(Boolean fragile) {
    this.fragile = fragile;
  }

  public CategorySettings immediatePayment(String immediatePayment) {
    this.immediatePayment = immediatePayment;
    return this;
  }

   /**
   * Get immediatePayment
   * @return immediatePayment
  **/
  @ApiModelProperty(value = "")
  public String getImmediatePayment() {
    return immediatePayment;
  }

  public void setImmediatePayment(String immediatePayment) {
    this.immediatePayment = immediatePayment;
  }

  public CategorySettings itemConditions(List<String> itemConditions) {
    this.itemConditions = itemConditions;
    return this;
  }

  public CategorySettings addItemConditionsItem(String itemConditionsItem) {
    if (this.itemConditions == null) {
      this.itemConditions = new ArrayList<String>();
    }
    this.itemConditions.add(itemConditionsItem);
    return this;
  }

   /**
   * Get itemConditions
   * @return itemConditions
  **/
  @ApiModelProperty(value = "")
  public List<String> getItemConditions() {
    return itemConditions;
  }

  public void setItemConditions(List<String> itemConditions) {
    this.itemConditions = itemConditions;
  }

  public CategorySettings itemsReviewsAllowed(Boolean itemsReviewsAllowed) {
    this.itemsReviewsAllowed = itemsReviewsAllowed;
    return this;
  }

   /**
   * Get itemsReviewsAllowed
   * @return itemsReviewsAllowed
  **/
  @ApiModelProperty(value = "")
  public Boolean isItemsReviewsAllowed() {
    return itemsReviewsAllowed;
  }

  public void setItemsReviewsAllowed(Boolean itemsReviewsAllowed) {
    this.itemsReviewsAllowed = itemsReviewsAllowed;
  }

  public CategorySettings listingAllowed(Boolean listingAllowed) {
    this.listingAllowed = listingAllowed;
    return this;
  }

   /**
   * Get listingAllowed
   * @return listingAllowed
  **/
  @ApiModelProperty(value = "")
  public Boolean isListingAllowed() {
    return listingAllowed;
  }

  public void setListingAllowed(Boolean listingAllowed) {
    this.listingAllowed = listingAllowed;
  }

  public CategorySettings maxDescriptionLength(Integer maxDescriptionLength) {
    this.maxDescriptionLength = maxDescriptionLength;
    return this;
  }

   /**
   * Get maxDescriptionLength
   * @return maxDescriptionLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxDescriptionLength() {
    return maxDescriptionLength;
  }

  public void setMaxDescriptionLength(Integer maxDescriptionLength) {
    this.maxDescriptionLength = maxDescriptionLength;
  }

  public CategorySettings maxPicturesPerItem(Integer maxPicturesPerItem) {
    this.maxPicturesPerItem = maxPicturesPerItem;
    return this;
  }

   /**
   * Get maxPicturesPerItem
   * @return maxPicturesPerItem
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxPicturesPerItem() {
    return maxPicturesPerItem;
  }

  public void setMaxPicturesPerItem(Integer maxPicturesPerItem) {
    this.maxPicturesPerItem = maxPicturesPerItem;
  }

  public CategorySettings maxPicturesPerItemVar(Integer maxPicturesPerItemVar) {
    this.maxPicturesPerItemVar = maxPicturesPerItemVar;
    return this;
  }

   /**
   * Get maxPicturesPerItemVar
   * @return maxPicturesPerItemVar
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxPicturesPerItemVar() {
    return maxPicturesPerItemVar;
  }

  public void setMaxPicturesPerItemVar(Integer maxPicturesPerItemVar) {
    this.maxPicturesPerItemVar = maxPicturesPerItemVar;
  }

  public CategorySettings maxSubTitleLength(Integer maxSubTitleLength) {
    this.maxSubTitleLength = maxSubTitleLength;
    return this;
  }

   /**
   * Get maxSubTitleLength
   * @return maxSubTitleLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxSubTitleLength() {
    return maxSubTitleLength;
  }

  public void setMaxSubTitleLength(Integer maxSubTitleLength) {
    this.maxSubTitleLength = maxSubTitleLength;
  }

  public CategorySettings maxTitleLength(Integer maxTitleLength) {
    this.maxTitleLength = maxTitleLength;
    return this;
  }

   /**
   * Get maxTitleLength
   * @return maxTitleLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxTitleLength() {
    return maxTitleLength;
  }

  public void setMaxTitleLength(Integer maxTitleLength) {
    this.maxTitleLength = maxTitleLength;
  }

  public CategorySettings maximumPrice(Object maximumPrice) {
    this.maximumPrice = maximumPrice;
    return this;
  }

   /**
   * Get maximumPrice
   * @return maximumPrice
  **/
  @ApiModelProperty(value = "")
  public Object getMaximumPrice() {
    return maximumPrice;
  }

  public void setMaximumPrice(Object maximumPrice) {
    this.maximumPrice = maximumPrice;
  }

  public CategorySettings minimumPrice(Object minimumPrice) {
    this.minimumPrice = minimumPrice;
    return this;
  }

   /**
   * Get minimumPrice
   * @return minimumPrice
  **/
  @ApiModelProperty(value = "")
  public Object getMinimumPrice() {
    return minimumPrice;
  }

  public void setMinimumPrice(Object minimumPrice) {
    this.minimumPrice = minimumPrice;
  }

  public CategorySettings mirrorCategory(String mirrorCategory) {
    this.mirrorCategory = mirrorCategory;
    return this;
  }

   /**
   * Get mirrorCategory
   * @return mirrorCategory
  **/
  @ApiModelProperty(value = "")
  public String getMirrorCategory() {
    return mirrorCategory;
  }

  public void setMirrorCategory(String mirrorCategory) {
    this.mirrorCategory = mirrorCategory;
  }

  public CategorySettings mirrorMasterCategory(Object mirrorMasterCategory) {
    this.mirrorMasterCategory = mirrorMasterCategory;
    return this;
  }

   /**
   * Get mirrorMasterCategory
   * @return mirrorMasterCategory
  **/
  @ApiModelProperty(value = "")
  public Object getMirrorMasterCategory() {
    return mirrorMasterCategory;
  }

  public void setMirrorMasterCategory(Object mirrorMasterCategory) {
    this.mirrorMasterCategory = mirrorMasterCategory;
  }

  public CategorySettings mirrorSlaveCategories(List<String> mirrorSlaveCategories) {
    this.mirrorSlaveCategories = mirrorSlaveCategories;
    return this;
  }

  public CategorySettings addMirrorSlaveCategoriesItem(String mirrorSlaveCategoriesItem) {
    if (this.mirrorSlaveCategories == null) {
      this.mirrorSlaveCategories = new ArrayList<String>();
    }
    this.mirrorSlaveCategories.add(mirrorSlaveCategoriesItem);
    return this;
  }

   /**
   * Get mirrorSlaveCategories
   * @return mirrorSlaveCategories
  **/
  @ApiModelProperty(value = "")
  public List<String> getMirrorSlaveCategories() {
    return mirrorSlaveCategories;
  }

  public void setMirrorSlaveCategories(List<String> mirrorSlaveCategories) {
    this.mirrorSlaveCategories = mirrorSlaveCategories;
  }

  public CategorySettings price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CategorySettings reservationAllowed(String reservationAllowed) {
    this.reservationAllowed = reservationAllowed;
    return this;
  }

   /**
   * Get reservationAllowed
   * @return reservationAllowed
  **/
  @ApiModelProperty(value = "")
  public String getReservationAllowed() {
    return reservationAllowed;
  }

  public void setReservationAllowed(String reservationAllowed) {
    this.reservationAllowed = reservationAllowed;
  }

  public CategorySettings restrictions(List<String> restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  public CategorySettings addRestrictionsItem(String restrictionsItem) {
    if (this.restrictions == null) {
      this.restrictions = new ArrayList<String>();
    }
    this.restrictions.add(restrictionsItem);
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public List<String> getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(List<String> restrictions) {
    this.restrictions = restrictions;
  }

  public CategorySettings roundedAddress(Boolean roundedAddress) {
    this.roundedAddress = roundedAddress;
    return this;
  }

   /**
   * Get roundedAddress
   * @return roundedAddress
  **/
  @ApiModelProperty(value = "")
  public Boolean isRoundedAddress() {
    return roundedAddress;
  }

  public void setRoundedAddress(Boolean roundedAddress) {
    this.roundedAddress = roundedAddress;
  }

  public CategorySettings sellerContact(String sellerContact) {
    this.sellerContact = sellerContact;
    return this;
  }

   /**
   * Get sellerContact
   * @return sellerContact
  **/
  @ApiModelProperty(value = "")
  public String getSellerContact() {
    return sellerContact;
  }

  public void setSellerContact(String sellerContact) {
    this.sellerContact = sellerContact;
  }

  public CategorySettings shippingModes(List<String> shippingModes) {
    this.shippingModes = shippingModes;
    return this;
  }

  public CategorySettings addShippingModesItem(String shippingModesItem) {
    if (this.shippingModes == null) {
      this.shippingModes = new ArrayList<String>();
    }
    this.shippingModes.add(shippingModesItem);
    return this;
  }

   /**
   * Get shippingModes
   * @return shippingModes
  **/
  @ApiModelProperty(value = "")
  public List<String> getShippingModes() {
    return shippingModes;
  }

  public void setShippingModes(List<String> shippingModes) {
    this.shippingModes = shippingModes;
  }

  public CategorySettings shippingOptions(List<String> shippingOptions) {
    this.shippingOptions = shippingOptions;
    return this;
  }

  public CategorySettings addShippingOptionsItem(String shippingOptionsItem) {
    if (this.shippingOptions == null) {
      this.shippingOptions = new ArrayList<String>();
    }
    this.shippingOptions.add(shippingOptionsItem);
    return this;
  }

   /**
   * Get shippingOptions
   * @return shippingOptions
  **/
  @ApiModelProperty(value = "")
  public List<String> getShippingOptions() {
    return shippingOptions;
  }

  public void setShippingOptions(List<String> shippingOptions) {
    this.shippingOptions = shippingOptions;
  }

  public CategorySettings shippingProfile(String shippingProfile) {
    this.shippingProfile = shippingProfile;
    return this;
  }

   /**
   * Get shippingProfile
   * @return shippingProfile
  **/
  @ApiModelProperty(value = "")
  public String getShippingProfile() {
    return shippingProfile;
  }

  public void setShippingProfile(String shippingProfile) {
    this.shippingProfile = shippingProfile;
  }

  public CategorySettings showContactInformation(Boolean showContactInformation) {
    this.showContactInformation = showContactInformation;
    return this;
  }

   /**
   * Get showContactInformation
   * @return showContactInformation
  **/
  @ApiModelProperty(value = "")
  public Boolean isShowContactInformation() {
    return showContactInformation;
  }

  public void setShowContactInformation(Boolean showContactInformation) {
    this.showContactInformation = showContactInformation;
  }

  public CategorySettings simpleShipping(String simpleShipping) {
    this.simpleShipping = simpleShipping;
    return this;
  }

   /**
   * Get simpleShipping
   * @return simpleShipping
  **/
  @ApiModelProperty(value = "")
  public String getSimpleShipping() {
    return simpleShipping;
  }

  public void setSimpleShipping(String simpleShipping) {
    this.simpleShipping = simpleShipping;
  }

  public CategorySettings stock(String stock) {
    this.stock = stock;
    return this;
  }

   /**
   * Get stock
   * @return stock
  **/
  @ApiModelProperty(value = "")
  public String getStock() {
    return stock;
  }

  public void setStock(String stock) {
    this.stock = stock;
  }

  public CategorySettings subVertical(Object subVertical) {
    this.subVertical = subVertical;
    return this;
  }

   /**
   * Get subVertical
   * @return subVertical
  **/
  @ApiModelProperty(value = "")
  public Object getSubVertical() {
    return subVertical;
  }

  public void setSubVertical(Object subVertical) {
    this.subVertical = subVertical;
  }

  public CategorySettings subscribable(Boolean subscribable) {
    this.subscribable = subscribable;
    return this;
  }

   /**
   * Get subscribable
   * @return subscribable
  **/
  @ApiModelProperty(value = "")
  public Boolean isSubscribable() {
    return subscribable;
  }

  public void setSubscribable(Boolean subscribable) {
    this.subscribable = subscribable;
  }

  public CategorySettings tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public CategorySettings addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public CategorySettings vertical(Object vertical) {
    this.vertical = vertical;
    return this;
  }

   /**
   * Get vertical
   * @return vertical
  **/
  @ApiModelProperty(value = "")
  public Object getVertical() {
    return vertical;
  }

  public void setVertical(Object vertical) {
    this.vertical = vertical;
  }

  public CategorySettings vipSubdomain(String vipSubdomain) {
    this.vipSubdomain = vipSubdomain;
    return this;
  }

   /**
   * Get vipSubdomain
   * @return vipSubdomain
  **/
  @ApiModelProperty(value = "")
  public String getVipSubdomain() {
    return vipSubdomain;
  }

  public void setVipSubdomain(String vipSubdomain) {
    this.vipSubdomain = vipSubdomain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategorySettings categorySettings = (CategorySettings) o;
    return Objects.equals(this.adultContent, categorySettings.adultContent) &&
        Objects.equals(this.buyingAllowed, categorySettings.buyingAllowed) &&
        Objects.equals(this.buyingModes, categorySettings.buyingModes) &&
        Objects.equals(this.catalogDomain, categorySettings.catalogDomain) &&
        Objects.equals(this.coverageAreas, categorySettings.coverageAreas) &&
        Objects.equals(this.currencies, categorySettings.currencies) &&
        Objects.equals(this.fragile, categorySettings.fragile) &&
        Objects.equals(this.immediatePayment, categorySettings.immediatePayment) &&
        Objects.equals(this.itemConditions, categorySettings.itemConditions) &&
        Objects.equals(this.itemsReviewsAllowed, categorySettings.itemsReviewsAllowed) &&
        Objects.equals(this.listingAllowed, categorySettings.listingAllowed) &&
        Objects.equals(this.maxDescriptionLength, categorySettings.maxDescriptionLength) &&
        Objects.equals(this.maxPicturesPerItem, categorySettings.maxPicturesPerItem) &&
        Objects.equals(this.maxPicturesPerItemVar, categorySettings.maxPicturesPerItemVar) &&
        Objects.equals(this.maxSubTitleLength, categorySettings.maxSubTitleLength) &&
        Objects.equals(this.maxTitleLength, categorySettings.maxTitleLength) &&
        Objects.equals(this.maximumPrice, categorySettings.maximumPrice) &&
        Objects.equals(this.minimumPrice, categorySettings.minimumPrice) &&
        Objects.equals(this.mirrorCategory, categorySettings.mirrorCategory) &&
        Objects.equals(this.mirrorMasterCategory, categorySettings.mirrorMasterCategory) &&
        Objects.equals(this.mirrorSlaveCategories, categorySettings.mirrorSlaveCategories) &&
        Objects.equals(this.price, categorySettings.price) &&
        Objects.equals(this.reservationAllowed, categorySettings.reservationAllowed) &&
        Objects.equals(this.restrictions, categorySettings.restrictions) &&
        Objects.equals(this.roundedAddress, categorySettings.roundedAddress) &&
        Objects.equals(this.sellerContact, categorySettings.sellerContact) &&
        Objects.equals(this.shippingModes, categorySettings.shippingModes) &&
        Objects.equals(this.shippingOptions, categorySettings.shippingOptions) &&
        Objects.equals(this.shippingProfile, categorySettings.shippingProfile) &&
        Objects.equals(this.showContactInformation, categorySettings.showContactInformation) &&
        Objects.equals(this.simpleShipping, categorySettings.simpleShipping) &&
        Objects.equals(this.stock, categorySettings.stock) &&
        Objects.equals(this.subVertical, categorySettings.subVertical) &&
        Objects.equals(this.subscribable, categorySettings.subscribable) &&
        Objects.equals(this.tags, categorySettings.tags) &&
        Objects.equals(this.vertical, categorySettings.vertical) &&
        Objects.equals(this.vipSubdomain, categorySettings.vipSubdomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adultContent, buyingAllowed, buyingModes, catalogDomain, coverageAreas, currencies, fragile, immediatePayment, itemConditions, itemsReviewsAllowed, listingAllowed, maxDescriptionLength, maxPicturesPerItem, maxPicturesPerItemVar, maxSubTitleLength, maxTitleLength, maximumPrice, minimumPrice, mirrorCategory, mirrorMasterCategory, mirrorSlaveCategories, price, reservationAllowed, restrictions, roundedAddress, sellerContact, shippingModes, shippingOptions, shippingProfile, showContactInformation, simpleShipping, stock, subVertical, subscribable, tags, vertical, vipSubdomain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategorySettings {\n");
    
    sb.append("    adultContent: ").append(toIndentedString(adultContent)).append("\n");
    sb.append("    buyingAllowed: ").append(toIndentedString(buyingAllowed)).append("\n");
    sb.append("    buyingModes: ").append(toIndentedString(buyingModes)).append("\n");
    sb.append("    catalogDomain: ").append(toIndentedString(catalogDomain)).append("\n");
    sb.append("    coverageAreas: ").append(toIndentedString(coverageAreas)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    fragile: ").append(toIndentedString(fragile)).append("\n");
    sb.append("    immediatePayment: ").append(toIndentedString(immediatePayment)).append("\n");
    sb.append("    itemConditions: ").append(toIndentedString(itemConditions)).append("\n");
    sb.append("    itemsReviewsAllowed: ").append(toIndentedString(itemsReviewsAllowed)).append("\n");
    sb.append("    listingAllowed: ").append(toIndentedString(listingAllowed)).append("\n");
    sb.append("    maxDescriptionLength: ").append(toIndentedString(maxDescriptionLength)).append("\n");
    sb.append("    maxPicturesPerItem: ").append(toIndentedString(maxPicturesPerItem)).append("\n");
    sb.append("    maxPicturesPerItemVar: ").append(toIndentedString(maxPicturesPerItemVar)).append("\n");
    sb.append("    maxSubTitleLength: ").append(toIndentedString(maxSubTitleLength)).append("\n");
    sb.append("    maxTitleLength: ").append(toIndentedString(maxTitleLength)).append("\n");
    sb.append("    maximumPrice: ").append(toIndentedString(maximumPrice)).append("\n");
    sb.append("    minimumPrice: ").append(toIndentedString(minimumPrice)).append("\n");
    sb.append("    mirrorCategory: ").append(toIndentedString(mirrorCategory)).append("\n");
    sb.append("    mirrorMasterCategory: ").append(toIndentedString(mirrorMasterCategory)).append("\n");
    sb.append("    mirrorSlaveCategories: ").append(toIndentedString(mirrorSlaveCategories)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    reservationAllowed: ").append(toIndentedString(reservationAllowed)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    roundedAddress: ").append(toIndentedString(roundedAddress)).append("\n");
    sb.append("    sellerContact: ").append(toIndentedString(sellerContact)).append("\n");
    sb.append("    shippingModes: ").append(toIndentedString(shippingModes)).append("\n");
    sb.append("    shippingOptions: ").append(toIndentedString(shippingOptions)).append("\n");
    sb.append("    shippingProfile: ").append(toIndentedString(shippingProfile)).append("\n");
    sb.append("    showContactInformation: ").append(toIndentedString(showContactInformation)).append("\n");
    sb.append("    simpleShipping: ").append(toIndentedString(simpleShipping)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    subVertical: ").append(toIndentedString(subVertical)).append("\n");
    sb.append("    subscribable: ").append(toIndentedString(subscribable)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vertical: ").append(toIndentedString(vertical)).append("\n");
    sb.append("    vipSubdomain: ").append(toIndentedString(vipSubdomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

