/*
 * MELI Markeplace SDK
 * This is a the codebase to generate a SDK for Open Platform Marketplace
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package meli.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import meli.model.VariationsAttributeCombinations;

/**
 * Variations
 */

public class Variations {
  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price;

  public static final String SERIALIZED_NAME_ATTRIBUTE_COMBINATIONS = "attribute_combinations";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_COMBINATIONS)
  private List<VariationsAttributeCombinations> attributeCombinations = null;

  public static final String SERIALIZED_NAME_AVAILABLE_QUANTITY = "available_quantity";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_QUANTITY)
  private Integer availableQuantity;

  public static final String SERIALIZED_NAME_SOLD_QUANTITY = "sold_quantity";
  @SerializedName(SERIALIZED_NAME_SOLD_QUANTITY)
  private Integer soldQuantity;

  public static final String SERIALIZED_NAME_PICTURE_IDS = "picture_ids";
  @SerializedName(SERIALIZED_NAME_PICTURE_IDS)
  private List<String> pictureIds = null;


  public Variations price(Integer price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "350", value = "")

  public Integer getPrice() {
    return price;
  }


  public void setPrice(Integer price) {
    this.price = price;
  }


  public Variations attributeCombinations(List<VariationsAttributeCombinations> attributeCombinations) {
    
    this.attributeCombinations = attributeCombinations;
    return this;
  }

  public Variations addAttributeCombinationsItem(VariationsAttributeCombinations attributeCombinationsItem) {
    if (this.attributeCombinations == null) {
      this.attributeCombinations = new ArrayList<VariationsAttributeCombinations>();
    }
    this.attributeCombinations.add(attributeCombinationsItem);
    return this;
  }

   /**
   * Get attributeCombinations
   * @return attributeCombinations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VariationsAttributeCombinations> getAttributeCombinations() {
    return attributeCombinations;
  }


  public void setAttributeCombinations(List<VariationsAttributeCombinations> attributeCombinations) {
    this.attributeCombinations = attributeCombinations;
  }


  public Variations availableQuantity(Integer availableQuantity) {
    
    this.availableQuantity = availableQuantity;
    return this;
  }

   /**
   * Get availableQuantity
   * @return availableQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public Integer getAvailableQuantity() {
    return availableQuantity;
  }


  public void setAvailableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
  }


  public Variations soldQuantity(Integer soldQuantity) {
    
    this.soldQuantity = soldQuantity;
    return this;
  }

   /**
   * Get soldQuantity
   * @return soldQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getSoldQuantity() {
    return soldQuantity;
  }


  public void setSoldQuantity(Integer soldQuantity) {
    this.soldQuantity = soldQuantity;
  }


  public Variations pictureIds(List<String> pictureIds) {
    
    this.pictureIds = pictureIds;
    return this;
  }

  public Variations addPictureIdsItem(String pictureIdsItem) {
    if (this.pictureIds == null) {
      this.pictureIds = new ArrayList<String>();
    }
    this.pictureIds.add(pictureIdsItem);
    return this;
  }

   /**
   * Get pictureIds
   * @return pictureIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPictureIds() {
    return pictureIds;
  }


  public void setPictureIds(List<String> pictureIds) {
    this.pictureIds = pictureIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Variations variations = (Variations) o;
    return Objects.equals(this.price, variations.price) &&
        Objects.equals(this.attributeCombinations, variations.attributeCombinations) &&
        Objects.equals(this.availableQuantity, variations.availableQuantity) &&
        Objects.equals(this.soldQuantity, variations.soldQuantity) &&
        Objects.equals(this.pictureIds, variations.pictureIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, attributeCombinations, availableQuantity, soldQuantity, pictureIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Variations {\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    attributeCombinations: ").append(toIndentedString(attributeCombinations)).append("\n");
    sb.append("    availableQuantity: ").append(toIndentedString(availableQuantity)).append("\n");
    sb.append("    soldQuantity: ").append(toIndentedString(soldQuantity)).append("\n");
    sb.append("    pictureIds: ").append(toIndentedString(pictureIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

